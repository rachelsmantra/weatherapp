{"version":3,"sources":["components/Conditions/Conditions.jsx","components/Forecast/Forecast.jsx","index.jsx"],"names":["Conditions","props","responseObj","cod","className","name","Math","round","main","temp","weather","description","Forecast","useState","city","setCity","unit","setUnit","setResponseObj","uriEncodedCity","encodeURIComponent","id","onSubmit","e","preventDefault","fetch","method","headers","then","response","json","type","placeholder","maxLength","value","onChange","target","checked","App","ReactDOM","render","document","querySelector"],"mappings":"uLAqBeA,EAnBI,SAAAC,GACjB,OACE,6BAC6B,MAA1BA,EAAMC,YAAYC,IACjB,yBAAKC,UAAU,yDACb,2BACE,gCAASH,EAAMC,YAAYG,OAG7B,8CACmBC,KAAKC,MAAMN,EAAMC,YAAYM,KAAKC,MADrD,qBAEYR,EAAMC,YAAYQ,QAAQ,GAAGC,YAFzC,MAKA,OCoEKC,EAjFE,WAAO,IAAD,IACCC,mBAAS,IADV,mBAChBC,EADgB,KACVC,EADU,OAECF,mBAAS,YAFV,mBAEhBG,EAFgB,KAEVC,EAFU,OAGeJ,mBAAS,IAHxB,mBAGhBX,EAHgB,KAGHgB,EAHG,KAKfC,EAAiBC,mBAAmBN,GAqB1C,OACE,6BACE,yDACA,0BACEO,GAAG,OACHjB,UAAU,mDACVkB,SAzBN,SAAqBC,GACnBA,EAAEC,iBAEFC,MAAM,mEAAD,OACgET,EADhE,cAC0EG,GAC7E,CACEO,OAAQ,MACRC,QAAS,CACP,kBAAmB,4CACnB,iBAAkB,wDAIrBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACJX,EAAeW,QAYf,yBAAKzB,UAAU,oBACb,2BACE2B,KAAK,OACLC,YAAY,aACZC,UAAU,KACVC,MAAOpB,EACPqB,SAAU,SAAAZ,GAAC,OAAIR,EAAQQ,EAAEa,OAAOF,QAChC9B,UAAU,kBAGd,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,cACb,2BACE2B,KAAK,QACL1B,KAAK,QACLgC,QAAkB,aAATrB,EACTkB,MAAM,WACNC,SAAU,SAAAZ,GAAC,OAAIN,EAAQM,EAAEa,OAAOF,QAChC9B,UAAU,qBAEZ,2BAAOA,UAAU,oBAAjB,eAEF,yBAAKA,UAAU,cACb,8BACE2B,KAAK,SADP,qBAEO,SAFP,qBAGO,SAHP,wBAIoB,WAATf,GAJX,sBAKQ,UALR,0BAMY,SAAAO,GAAC,OAAIN,EAAQM,EAAEa,OAAOF,UANlC,0BAOY,oBAPZ,IASA,2BAAO9B,UAAU,oBAAjB,aAGJ,yBAAKA,UAAU,oBACb,4BAAQA,UAAU,sBAAsB2B,KAAK,UAA7C,kBAMJ,kBAAC,EAAD,CAAY7B,YAAaA,M,MC1E/B,SAASoC,IACP,OACE,yBACEjB,GAAG,iBACHjB,UAAU,6EAEV,4BAAQA,UAAU,cAChB,6CAEF,8BACE,kBAAC,EAAD,QAMOkC,YAEfC,IAASC,OAAO,kBAACF,EAAD,MAASG,SAASC,cAAc,W","file":"static/js/main.8ef9fa05.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Conditions = props => {\n  return (\n    <div>\n      {props.responseObj.cod === 200 ? (\n        <div className=\"conditions d-flex flex-column align-items-center card\">\n          <p>\n            <strong>{props.responseObj.name}</strong>\n          </p>\n\n          <p>\n            It is currently {Math.round(props.responseObj.main.temp)} degrees\n            out with {props.responseObj.weather[0].description}.\n          </p>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Conditions;\n","import React, { useState } from \"react\";\nimport Conditions from \"../Conditions/Conditions\";\n\nconst Forecast = () => {\n  let [city, setCity] = useState(\"\");\n  let [unit, setUnit] = useState(\"imperial\");\n  let [responseObj, setResponseObj] = useState({});\n\n  const uriEncodedCity = encodeURIComponent(city);\n\n  function getForecast(e) {\n    e.preventDefault();\n\n    fetch(\n      `https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"5cc607410cmsh9b21055551948e2p15397cjsn4a3aa4e4ede5\"\n        }\n      }\n    )\n      .then(response => response.json())\n      .then(response => {\n        setResponseObj(response);\n      });\n  }\n\n  return (\n    <div>\n      <h2> What's the weather like?</h2>\n      <form\n        id=\"form\"\n        className=\"form-group d-flex flex-column align-items-center\"\n        onSubmit={getForecast}\n      >\n        <div className=\"form-group col-8\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter City\"\n            maxLength=\"50\"\n            value={city}\n            onChange={e => setCity(e.target.value)}\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"radio-buttons\">\n          <div className=\"form-check\">\n            <input\n              type=\"radio\"\n              name=\"units\"\n              checked={unit === \"imperial\"}\n              value=\"imperial\"\n              onChange={e => setUnit(e.target.value)}\n              className=\"form-check-input\"\n            />\n            <label className=\"form-check-label\">Fahrenheit</label>\n          </div>\n          <div className=\"form-check\">\n            <input\n              type=\"radio\"\n              type=\"radio\"\n              name=\"units\"\n              checked={unit === \"metric\"}\n              value=\"metric\"\n              onChange={e => setUnit(e.target.value)}\n              className=\"form-check-input\"\n            />\n            <label className=\"form-check-label\">Celcius</label>\n          </div>\n        </div>\n        <div className=\"button-container\">\n          <button className=\"btn btn-info btn-lg\" type=\"submit\">\n            Get Forecast\n          </button>\n        </div>\n      </form>\n\n      <Conditions responseObj={responseObj} />\n    </div>\n  );\n};\n\nexport default Forecast;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Forecast from \"./components/Forecast/Forecast\";\nimport \"./app.css\";\n\nfunction App() {\n  return (\n    <div\n      id=\"main-container\"\n      className=\"App container d-flex flex-column align-items-center justify-content-start\"\n    >\n      <header className=\"App-header\">\n        <h1> Weather App</h1>\n      </header>\n      <main>\n        <Forecast />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}