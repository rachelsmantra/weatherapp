{"version":3,"sources":["components/Conditions/Conditions.jsx","components/Forecast/Forecast.jsx","index.jsx"],"names":["Conditions","props","responseObj","cod","name","Math","round","main","temp","weather","description","Forecast","useState","city","setCity","unit","setUnit","setResponseObj","uriEncodedCity","encodeURIComponent","id","className","onSubmit","e","preventDefault","fetch","method","headers","then","response","json","type","placeholder","maxLength","value","onChange","target","checked","App","ReactDOM","render","document","querySelector"],"mappings":"uLAoBeA,EAlBI,SAAAC,GACjB,OACE,6BAC6B,MAA1BA,EAAMC,YAAYC,IACjB,6BACE,2BACE,gCAASF,EAAMC,YAAYE,OAE7B,8CACmBC,KAAKC,MAAML,EAAMC,YAAYK,KAAKC,MADrD,qBAEYP,EAAMC,YAAYO,QAAQ,GAAGC,YAFzC,MAKA,OC2EKC,EAvFE,WAAO,IAAD,IACCC,mBAAS,IADV,mBAChBC,EADgB,KACVC,EADU,OAECF,mBAAS,YAFV,mBAEhBG,EAFgB,KAEVC,EAFU,OAGeJ,mBAAS,IAHxB,mBAGhBV,EAHgB,KAGHe,EAHG,KAKfC,EAAiBC,mBAAmBN,GA4B1C,OACE,6BACE,gEACA,0BACEO,GAAG,OACHC,UAAU,mDACVC,SAhCN,SAAqBC,GACnBA,EAAEC,iBAEFC,MAAM,mEAAD,OACgEV,EADhE,cAC0EG,GAC7E,CACEQ,OAAQ,MACRC,QAAS,CACP,kBAAmB,4CACnB,iBAAkB,wDAWrBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACJZ,EAAeY,QAYf,yBAAKR,UAAU,oBACb,2BACEU,KAAK,OACLC,YAAY,aACZC,UAAU,KACVC,MAAOrB,EACPsB,SAAU,SAAAZ,GAAC,OAAIT,EAAQS,EAAEa,OAAOF,QAChCb,UAAU,kBAGd,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,cACb,2BACEU,KAAK,QACL3B,KAAK,QACLiC,QAAkB,aAATtB,EACTmB,MAAM,WACNC,SAAU,SAAAZ,GAAC,OAAIP,EAAQO,EAAEa,OAAOF,QAChCb,UAAU,qBAEZ,2BAAOA,UAAU,oBAAjB,eAEF,yBAAKA,UAAU,cACb,8BACEU,KAAK,SADP,qBAEO,SAFP,qBAGO,SAHP,wBAIoB,WAAThB,GAJX,sBAKQ,UALR,0BAMY,SAAAQ,GAAC,OAAIP,EAAQO,EAAEa,OAAOF,UANlC,0BAOY,oBAPZ,IASA,2BAAOb,UAAU,oBAAjB,aAIJ,4BAAQA,UAAU,kBAAkBU,KAAK,UAAzC,iBAKF,kBAAC,EAAD,CAAY7B,YAAaA,M,MC/E/B,SAASoC,IACP,OACE,yBACElB,GAAG,iBACHC,UAAU,8EAEV,4BAAQA,UAAU,cAChB,6CAEF,8BACE,kBAAC,EAAD,QAMOiB,YAEfC,IAASC,OAAO,kBAACF,EAAD,MAASG,SAASC,cAAc,W","file":"static/js/main.4563283c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Conditions = props => {\n  return (\n    <div>\n      {props.responseObj.cod === 200 ? (\n        <div>\n          <p>\n            <strong>{props.responseObj.name}</strong>\n          </p>\n          <p>\n            It is currently {Math.round(props.responseObj.main.temp)} degrees\n            out with {props.responseObj.weather[0].description}.\n          </p>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Conditions;\n","import React, { useState } from \"react\";\nimport Conditions from \"../Conditions/Conditions\";\n\nconst Forecast = () => {\n  let [city, setCity] = useState(\"\");\n  let [unit, setUnit] = useState(\"imperial\");\n  let [responseObj, setResponseObj] = useState({});\n\n  const uriEncodedCity = encodeURIComponent(city);\n\n  function getForecast(e) {\n    e.preventDefault();\n\n    fetch(\n      `https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"5cc607410cmsh9b21055551948e2p15397cjsn4a3aa4e4ede5\"\n        }\n      }\n    )\n      // .then(response => {\n      // \tconsole.log(response);\n      // })\n      // .catch(err => {\n      // \tconsole.log(err);\n      // });\n\n      .then(response => response.json())\n      .then(response => {\n        setResponseObj(response);\n      });\n  }\n\n  return (\n    <div>\n      <h2> Find Current Weather Conditions</h2>\n      <form\n        id=\"form\"\n        className=\"form-group d-flex flex-column align-items-center\"\n        onSubmit={getForecast}\n      >\n        <div className=\"form-group col-5\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter City\"\n            maxLength=\"50\"\n            value={city}\n            onChange={e => setCity(e.target.value)}\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"radio-buttons\">\n          <div className=\"form-check\">\n            <input\n              type=\"radio\"\n              name=\"units\"\n              checked={unit === \"imperial\"}\n              value=\"imperial\"\n              onChange={e => setUnit(e.target.value)}\n              className=\"form-check-input\"\n            />\n            <label className=\"form-check-label\">Fahrenheit</label>\n          </div>\n          <div className=\"form-check\">\n            <input\n              type=\"radio\"\n              type=\"radio\"\n              name=\"units\"\n              checked={unit === \"metric\"}\n              value=\"metric\"\n              onChange={e => setUnit(e.target.value)}\n              className=\"form-check-input\"\n            />\n            <label className=\"form-check-label\">Celcius</label>\n          </div>\n        </div>\n\n        <button className=\"btn btn-success\" type=\"submit\">\n          Get Forecast\n        </button>\n      </form>\n\n      <Conditions responseObj={responseObj} />\n    </div>\n  );\n};\n\nexport default Forecast;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport WeatherForm from \"./WeatherForm\";\nimport Forecast from \"./components/Forecast/Forecast\";\nimport \"./app.css\";\n\nfunction App() {\n  return (\n    <div\n      id=\"main-container\"\n      className=\"App container d-flex flex-column align-items-center justify-content-center\"\n    >\n      <header className=\"App-header\">\n        <h1> Weather App</h1>\n      </header>\n      <main>\n        <Forecast />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}